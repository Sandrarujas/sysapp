{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\34615\\\\Desktop\\\\TFC_sys\\\\ProyectoFinal_sys\\\\client\\\\src\\\\components\\\\Post.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport EditPostModal from \"./EditPostModal\"; // Importa tu modal de edición\n// ... otros imports\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  post\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n\n  // Estados que ya tienes...\n  const [likes, setLikes] = useState(post.likes || 0);\n  // ...\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentPost, setCurrentPost] = useState(post);\n\n  // Función para abrir modal de edición\n  const handleEditClick = () => {\n    setShowEditModal(true);\n  };\n\n  // Función para cerrar modal de edición\n  const handleCloseModal = () => {\n    setShowEditModal(false);\n  };\n\n  // Función que se llamará desde el modal cuando se guarden los cambios\n  const handleSaveEdit = updatedPost => {\n    setCurrentPost(updatedPost);\n    setShowEditModal(false);\n  };\n\n  // Función para eliminar el post\n  const handleDelete = async () => {\n    if (!window.confirm(\"¿Seguro que quieres eliminar este post?\")) return;\n    try {\n      await axios.delete(`http://localhost:5000/api/posts/${post.id}`);\n      alert(\"Post eliminado correctamente\");\n      // Aquí puedes agregar lógica para actualizar la lista de posts, \n      // o recargar la página, o emitir evento, según tu arquitectura\n    } catch (error) {\n      console.error(\"Error eliminando post:\", error);\n      alert(\"Error al eliminar el post\");\n    }\n  };\n\n  // Solo mostrar botones editar/eliminar si el usuario es dueño del post\n  const isOwner = user && user.id === post.user.id;\n\n  // En el render, usa currentPost en lugar de post para mostrar contenido actualizado\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/profile/${currentPost.user.username}`,\n        className: \"post-user\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: currentPost.user.profileImage,\n          username: currentPost.user.username,\n          size: 40,\n          className: \"post-user-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-username\",\n          children: currentPost.user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-date\",\n        children: new Date(currentPost.createdAt).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentPost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), currentPost.image && !imageError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getImageUrl(currentPost.image) || \"/placeholder.svg\",\n          alt: \"Post\",\n          className: \"post-image\",\n          onError: handleImageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), imageError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-image-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No se pudo cargar la imagen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-image-path\",\n          children: [\"Ruta: \", currentPost.image]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `post-like-button ${liked ? \"liked\" : \"\"}`,\n        onClick: handleLike,\n        children: [liked ? \"❤️\" : \"🤍\", \" \", likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post-comment-button\",\n        onClick: toggleComments,\n        children: [\"\\uD83D\\uDCAC \", commentCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), isOwner && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditClick,\n          className: \"post-edit-button\",\n          children: \"\\u270F\\uFE0F Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          className: \"post-delete-button\",\n          children: \"\\uD83D\\uDDD1\\uFE0F Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), showEditModal && /*#__PURE__*/_jsxDEV(EditPostModal, {\n      post: currentPost,\n      onClose: handleCloseModal,\n      onSave: handleSaveEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"k0UyCdH02Pxn29j5J4nN6EU65E4=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["useState","useContext","EditPostModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","post","_s","user","AuthContext","likes","setLikes","showEditModal","setShowEditModal","currentPost","setCurrentPost","handleEditClick","handleCloseModal","handleSaveEdit","updatedPost","handleDelete","window","confirm","axios","delete","id","alert","error","console","isOwner","className","children","Link","to","username","Avatar","src","profileImage","size","fileName","_jsxFileName","lineNumber","columnNumber","Date","createdAt","toLocaleDateString","content","image","imageError","getImageUrl","alt","onError","handleImageError","liked","onClick","handleLike","toggleComments","commentCount","showComments","onClose","onSave","_c","$RefreshReg$"],"sources":["C:/Users/34615/Desktop/TFC_sys/ProyectoFinal_sys/client/src/components/Post.jsx"],"sourcesContent":["import { useState, useContext } from \"react\"\nimport EditPostModal from \"./EditPostModal\"  // Importa tu modal de edición\n// ... otros imports\n\nconst Post = ({ post }) => {\n  const { user } = useContext(AuthContext)\n\n  // Estados que ya tienes...\n  const [likes, setLikes] = useState(post.likes || 0)\n  // ...\n  const [showEditModal, setShowEditModal] = useState(false)\n  const [currentPost, setCurrentPost] = useState(post)\n\n  // Función para abrir modal de edición\n  const handleEditClick = () => {\n    setShowEditModal(true)\n  }\n\n  // Función para cerrar modal de edición\n  const handleCloseModal = () => {\n    setShowEditModal(false)\n  }\n\n  // Función que se llamará desde el modal cuando se guarden los cambios\n  const handleSaveEdit = (updatedPost) => {\n    setCurrentPost(updatedPost)\n    setShowEditModal(false)\n  }\n\n  // Función para eliminar el post\n  const handleDelete = async () => {\n    if (!window.confirm(\"¿Seguro que quieres eliminar este post?\")) return\n\n    try {\n      await axios.delete(`http://localhost:5000/api/posts/${post.id}`)\n      alert(\"Post eliminado correctamente\")\n      // Aquí puedes agregar lógica para actualizar la lista de posts, \n      // o recargar la página, o emitir evento, según tu arquitectura\n    } catch (error) {\n      console.error(\"Error eliminando post:\", error)\n      alert(\"Error al eliminar el post\")\n    }\n  }\n\n  // Solo mostrar botones editar/eliminar si el usuario es dueño del post\n  const isOwner = user && user.id === post.user.id\n\n  // En el render, usa currentPost en lugar de post para mostrar contenido actualizado\n\n  return (\n    <div className=\"post\">\n      <div className=\"post-header\">\n        <Link to={`/profile/${currentPost.user.username}`} className=\"post-user\">\n          <Avatar \n            src={currentPost.user.profileImage} \n            username={currentPost.user.username} \n            size={40}\n            className=\"post-user-image\"\n          />\n          <span className=\"post-username\">{currentPost.user.username}</span>\n        </Link>\n        <span className=\"post-date\">{new Date(currentPost.createdAt).toLocaleDateString()}</span>\n      </div>\n      <div className=\"post-content\">\n        <p>{currentPost.content}</p>\n        {currentPost.image && !imageError && (\n          <div className=\"post-image-container\">\n            <img\n              src={getImageUrl(currentPost.image) || \"/placeholder.svg\"}\n              alt=\"Post\"\n              className=\"post-image\"\n              onError={handleImageError}\n            />\n          </div>\n        )}\n        {imageError && (\n          <div className=\"post-image-error\">\n            <p>No se pudo cargar la imagen</p>\n            <p className=\"post-image-path\">Ruta: {currentPost.image}</p>\n          </div>\n        )}\n      </div>\n      <div className=\"post-actions\">\n        <button className={`post-like-button ${liked ? \"liked\" : \"\"}`} onClick={handleLike}>\n          {liked ? \"❤️\" : \"🤍\"} {likes}\n        </button>\n        <button className=\"post-comment-button\" onClick={toggleComments}>\n          💬 {commentCount}\n        </button>\n\n        {isOwner && (\n          <>\n            <button onClick={handleEditClick} className=\"post-edit-button\">\n              ✏️ Editar\n            </button>\n            <button onClick={handleDelete} className=\"post-delete-button\">\n              🗑️ Eliminar\n            </button>\n          </>\n        )}\n      </div>\n\n      {/* Comentarios */}\n      {showComments && (\n        <div className=\"post-comments\">\n          {/* ... tu código de comentarios */}\n        </div>\n      )}\n\n      {/* Modal de edición */}\n      {showEditModal && (\n        <EditPostModal\n          post={currentPost}\n          onClose={handleCloseModal}\n          onSave={handleSaveEdit}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Post\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}