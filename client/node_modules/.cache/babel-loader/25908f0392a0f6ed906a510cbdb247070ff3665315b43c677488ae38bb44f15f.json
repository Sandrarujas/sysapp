{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\34615\\\\Desktop\\\\ProyectoFinal_sys\\\\client\\\\src\\\\components\\\\NotificationList.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationList = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showDropdown, setShowDropdown] = useState(false);\n  useEffect(() => {\n    // Cargar notificaciones cuando se muestra el dropdown\n    if (showDropdown) {\n      fetchNotifications();\n    }\n  }, [showDropdown]);\n  const fetchNotifications = async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/notifications?limit=5\");\n      console.log(\"Datos de notificaciones:\", res.data.notifications);\n      setNotifications(res.data.notifications);\n      setUnreadCount(res.data.unreadCount);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error al cargar notificaciones:\", error);\n      setError(\"No se pudieron cargar las notificaciones\");\n      setLoading(false);\n    }\n  };\n  const markAsRead = async id => {\n    try {\n      await axios.put(`http://localhost:5000/api/notifications/${id}/read`);\n\n      // Actualizar estado local\n      setNotifications(notifications.map(notif => notif.id === id ? {\n        ...notif,\n        isRead: true\n      } : notif));\n\n      // Actualizar contador de no leídas\n      setUnreadCount(prev => prev > 0 ? prev - 1 : 0);\n    } catch (error) {\n      console.error(\"Error al marcar notificación:\", error);\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      await axios.put(\"http://localhost:5000/api/notifications/read-all\");\n\n      // Actualizar estado local\n      setNotifications(notifications.map(notif => ({\n        ...notif,\n        isRead: true\n      })));\n\n      // Actualizar contador\n      setUnreadCount(0);\n    } catch (error) {\n      console.error(\"Error al marcar todas las notificaciones:\", error);\n    }\n  };\n  const toggleDropdown = () => {\n    setShowDropdown(!showDropdown);\n  };\n  const getNotificationContent = notification => {\n    const {\n      type,\n      senderUsername\n    } = notification;\n    switch (type) {\n      case 'like':\n        return `${senderUsername} le dio like a tu publicación`;\n      case 'comment':\n        return `${senderUsername} comentó en tu publicación`;\n      case 'follow':\n        return `${senderUsername} comenzó a seguirte`;\n      default:\n        return `Nueva notificación de ${senderUsername}`;\n    }\n  };\n  const getNotificationLink = notification => {\n    const {\n      type,\n      postId,\n      senderUsername\n    } = notification;\n    switch (type) {\n      case 'like':\n      case 'comment':\n        return `/post/${postId}`;\n      case 'follow':\n        return `/profile/${senderUsername}`;\n      default:\n        return '#';\n    }\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'like':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-heart notification-icon like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 16\n        }, this);\n      case 'comment':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-comment notification-icon comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 16\n        }, this);\n      case 'follow':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user-plus notification-icon follow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-bell notification-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Función para manejar las URLs de imágenes\n  const getImageUrl = imagePath => {\n    if (!imagePath) return \"/placeholder.svg?height=40&width=40\";\n\n    // Si la ruta ya es una URL completa, devolverla tal cual\n    if (imagePath.startsWith(\"http\")) return imagePath;\n\n    // Construir la URL completa\n    return `http://localhost:5000${imagePath}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-bell\",\n      onClick: toggleDropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-bell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notificaciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mark-all-read\",\n          onClick: markAllAsRead,\n          children: \"Marcar todas como le\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-loading\",\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this) : notifications.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-list\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(Link, {\n          to: getNotificationLink(notification),\n          className: `notification-item ${!notification.isRead ? 'unread' : ''}`,\n          onClick: () => !notification.isRead && markAsRead(notification.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: getImageUrl(notification.senderProfileImage) || \"/placeholder.svg\",\n              alt: notification.senderUsername,\n              className: \"notification-user-image\",\n              onError: e => {\n                console.log(\"Error cargando imagen:\", notification.senderProfileImage);\n                e.target.src = \"/placeholder.svg?height=40&width=40\";\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this), getNotificationIcon(notification.type)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: getNotificationContent(notification)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-time\",\n              children: new Date(notification.createdAt).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }, this), !notification.isRead && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 44\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-empty\",\n        children: \"No tienes notificaciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-footer\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/notifications\",\n          className: \"view-all\",\n          children: \"Ver todas las notificaciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationList, \"HrcB91fhhovM4tKjnAeMF9Den4g=\");\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["useState","useEffect","Link","axios","jsxDEV","_jsxDEV","NotificationList","_s","notifications","setNotifications","unreadCount","setUnreadCount","loading","setLoading","error","setError","showDropdown","setShowDropdown","fetchNotifications","res","get","console","log","data","markAsRead","id","put","map","notif","isRead","prev","markAllAsRead","toggleDropdown","getNotificationContent","notification","type","senderUsername","getNotificationLink","postId","getNotificationIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getImageUrl","imagePath","startsWith","children","onClick","length","to","src","senderProfileImage","alt","onError","e","target","Date","createdAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/34615/Desktop/ProyectoFinal_sys/client/src/components/NotificationList.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport \"../App.css\"\r\n\r\nconst NotificationList = () => {\r\n  const [notifications, setNotifications] = useState([])\r\n  const [unreadCount, setUnreadCount] = useState(0)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(\"\")\r\n  const [showDropdown, setShowDropdown] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // Cargar notificaciones cuando se muestra el dropdown\r\n    if (showDropdown) {\r\n      fetchNotifications()\r\n    }\r\n  }, [showDropdown])\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const res = await axios.get(\"http://localhost:5000/api/notifications?limit=5\")\r\n      console.log(\"Datos de notificaciones:\", res.data.notifications)\r\n      setNotifications(res.data.notifications)\r\n      setUnreadCount(res.data.unreadCount)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.error(\"Error al cargar notificaciones:\", error)\r\n      setError(\"No se pudieron cargar las notificaciones\")\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const markAsRead = async (id) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/notifications/${id}/read`)\r\n      \r\n      // Actualizar estado local\r\n      setNotifications(\r\n        notifications.map((notif) => \r\n          notif.id === id ? { ...notif, isRead: true } : notif\r\n        )\r\n      )\r\n      \r\n      // Actualizar contador de no leídas\r\n      setUnreadCount(prev => prev > 0 ? prev - 1 : 0)\r\n    } catch (error) {\r\n      console.error(\"Error al marcar notificación:\", error)\r\n    }\r\n  }\r\n\r\n  const markAllAsRead = async () => {\r\n    try {\r\n      await axios.put(\"http://localhost:5000/api/notifications/read-all\")\r\n      \r\n      // Actualizar estado local\r\n      setNotifications(\r\n        notifications.map((notif) => ({ ...notif, isRead: true }))\r\n      )\r\n      \r\n      // Actualizar contador\r\n      setUnreadCount(0)\r\n    } catch (error) {\r\n      console.error(\"Error al marcar todas las notificaciones:\", error)\r\n    }\r\n  }\r\n\r\n  const toggleDropdown = () => {\r\n    setShowDropdown(!showDropdown)\r\n  }\r\n\r\n  const getNotificationContent = (notification) => {\r\n    const { type, senderUsername } = notification\r\n    \r\n    switch (type) {\r\n      case 'like':\r\n        return `${senderUsername} le dio like a tu publicación`\r\n      case 'comment':\r\n        return `${senderUsername} comentó en tu publicación`\r\n      case 'follow':\r\n        return `${senderUsername} comenzó a seguirte`\r\n      default:\r\n        return `Nueva notificación de ${senderUsername}`\r\n    }\r\n  }\r\n\r\n  const getNotificationLink = (notification) => {\r\n    const { type, postId, senderUsername } = notification\r\n    \r\n    switch (type) {\r\n      case 'like':\r\n      case 'comment':\r\n        return `/post/${postId}`\r\n      case 'follow':\r\n        return `/profile/${senderUsername}`\r\n      default:\r\n        return '#'\r\n    }\r\n  }\r\n\r\n  const getNotificationIcon = (type) => {\r\n    switch (type) {\r\n      case 'like':\r\n        return <i className=\"fas fa-heart notification-icon like\"></i>\r\n      case 'comment':\r\n        return <i className=\"fas fa-comment notification-icon comment\"></i>\r\n      case 'follow':\r\n        return <i className=\"fas fa-user-plus notification-icon follow\"></i>\r\n      default:\r\n        return <i className=\"fas fa-bell notification-icon\"></i>\r\n    }\r\n  }\r\n\r\n  // Función para manejar las URLs de imágenes\r\n  const getImageUrl = (imagePath) => {\r\n    if (!imagePath) return \"/placeholder.svg?height=40&width=40\";\r\n    \r\n    // Si la ruta ya es una URL completa, devolverla tal cual\r\n    if (imagePath.startsWith(\"http\")) return imagePath;\r\n    \r\n    // Construir la URL completa\r\n    return `http://localhost:5000${imagePath}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"notification-container\">\r\n      <div className=\"notification-bell\" onClick={toggleDropdown}>\r\n        <i className=\"fas fa-bell\"></i>\r\n        {unreadCount > 0 && <span className=\"notification-badge\">{unreadCount}</span>}\r\n      </div>\r\n\r\n      {showDropdown && (\r\n        <div className=\"notification-dropdown\">\r\n          <div className=\"notification-header\">\r\n            <h3>Notificaciones</h3>\r\n            {unreadCount > 0 && (\r\n              <button className=\"mark-all-read\" onClick={markAllAsRead}>\r\n                Marcar todas como leídas\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {loading ? (\r\n            <div className=\"notification-loading\">Cargando...</div>\r\n          ) : error ? (\r\n            <div className=\"notification-error\">{error}</div>\r\n          ) : notifications.length > 0 ? (\r\n            <div className=\"notification-list\">\r\n              {notifications.map((notification) => (\r\n                <Link\r\n                  key={notification.id}\r\n                  to={getNotificationLink(notification)}\r\n                  className={`notification-item ${!notification.isRead ? 'unread' : ''}`}\r\n                  onClick={() => !notification.isRead && markAsRead(notification.id)}\r\n                >\r\n                  <div className=\"notification-avatar\">\r\n                    <img\r\n                      src={getImageUrl(notification.senderProfileImage) || \"/placeholder.svg\"}\r\n                      alt={notification.senderUsername}\r\n                      className=\"notification-user-image\"\r\n                      onError={(e) => {\r\n                        console.log(\"Error cargando imagen:\", notification.senderProfileImage);\r\n                        e.target.src = \"/placeholder.svg?height=40&width=40\";\r\n                      }}\r\n                    />\r\n                    {getNotificationIcon(notification.type)}\r\n                  </div>\r\n                  <div className=\"notification-content\">\r\n                    <p>{getNotificationContent(notification)}</p>\r\n                    <span className=\"notification-time\">\r\n                      {new Date(notification.createdAt).toLocaleDateString()}\r\n                    </span>\r\n                  </div>\r\n                  {!notification.isRead && <div className=\"notification-dot\"></div>}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"notification-empty\">No tienes notificaciones</div>\r\n          )}\r\n\r\n          <div className=\"notification-footer\">\r\n            <Link to=\"/notifications\" className=\"view-all\">\r\n              Ver todas las notificaciones\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotificationList"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}