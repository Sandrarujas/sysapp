{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\34615\\\\Desktop\\\\ProyectoFinal_sys\\\\client\\\\src\\\\components\\\\Conversation.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Conversation = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [otherUser, setOtherUser] = useState(null);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  // Cargar mensajes\n  const fetchMessages = async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get(`http://localhost:5000/api/messages/${userId}`);\n      setMessages(res.data);\n\n      // Extraer información del otro usuario del primer mensaje\n      if (res.data.length > 0) {\n        const message = res.data[0];\n        const isReceived = !message.isMine;\n        if (isReceived) {\n          setOtherUser({\n            id: message.sender.id,\n            username: message.sender.username,\n            profileImage: message.sender.profileImage\n          });\n        } else {\n          // Si el primer mensaje es mío, necesitamos obtener la info del usuario de otra manera\n          const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\n          setOtherUser({\n            id: userRes.data.id,\n            username: userRes.data.username,\n            profileImage: userRes.data.profileImage\n          });\n        }\n      } else {\n        // Si no hay mensajes, obtener información del usuario\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\n        setOtherUser({\n          id: userRes.data.id,\n          username: userRes.data.username,\n          profileImage: userRes.data.profileImage\n        });\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error al cargar mensajes:\", error);\n      setError(\"Error al cargar mensajes\");\n      setLoading(false);\n    }\n  };\n\n  // Cargar mensajes al montar el componente o cambiar de usuario\n  useEffect(() => {\n    fetchMessages();\n\n    // Actualizar mensajes cada 10 segundos\n    const interval = setInterval(fetchMessages, 10000);\n    return () => clearInterval(interval);\n  }, [userId]);\n\n  // Desplazarse al último mensaje cuando se cargan o envían mensajes\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Enviar mensaje\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/messages\", {\n        receiverId: userId,\n        content: newMessage\n      });\n\n      // Añadir el nuevo mensaje a la lista\n      setMessages([...messages, {\n        ...res.data,\n        isMine: true\n      }]);\n\n      // Limpiar el campo de texto\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"Error al enviar mensaje:\", error);\n      alert(\"Error al enviar mensaje\");\n    }\n  };\n  if (loading && !otherUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando conversaci\\xF3n...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-container\",\n    children: [otherUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-header\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/messages\",\n        className: \"back-button\",\n        children: \"\\u2190 Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/profile/${otherUser.username}`,\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: otherUser.profileImage ? `http://localhost:5000${otherUser.profileImage}` : \"/placeholder.svg?height=40&width=40\",\n          alt: otherUser.username,\n          className: \"user-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: otherUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-list\",\n      children: [messages.length > 0 ? messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isMine ? 'message-mine' : 'message-other'}`,\n        children: [!message.isMine && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: message.sender.profileImage ? `http://localhost:5000${message.sender.profileImage}` : \"/placeholder.svg?height=30&width=30\",\n          alt: message.sender.username,\n          className: \"message-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-time\",\n            children: [new Date(message.createdAt).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            }), message.isMine && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-status\",\n              children: message.isRead ? ' ✓✓' : ' ✓'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-messages\",\n        children: \"No hay mensajes. \\xA1Env\\xEDa el primero!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-form\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Escribe un mensaje...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Conversation, \"IIj9g4tt7iFOXpWO0r8fgTIF3sI=\", false, function () {\n  return [useParams];\n});\n_c = Conversation;\nexport default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useRef","useParams","Link","axios","jsxDEV","_jsxDEV","Conversation","userId","messages","setMessages","otherUser","setOtherUser","newMessage","setNewMessage","loading","setLoading","error","setError","messagesEndRef","fetchMessages","res","get","data","length","message","isReceived","isMine","id","sender","username","profileImage","userRes","console","interval","setInterval","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","post","receiverId","content","alert","className","children","fileName","lineNumber","columnNumber","to","src","alt","map","Date","createdAt","toLocaleTimeString","hour","minute","isRead","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/34615/Desktop/ProyectoFinal_sys/client/src/components/Conversation.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect, useRef } from \"react\"\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport \"../App.css\"\r\n\r\nconst Conversation = () => {\r\n  const { userId } = useParams()\r\n  const [messages, setMessages] = useState([])\r\n  const [otherUser, setOtherUser] = useState(null)\r\n  const [newMessage, setNewMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(\"\")\r\n  const messagesEndRef = useRef(null)\r\n\r\n  // Cargar mensajes\r\n  const fetchMessages = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const res = await axios.get(`http://localhost:5000/api/messages/${userId}`)\r\n      setMessages(res.data)\r\n      \r\n      // Extraer información del otro usuario del primer mensaje\r\n      if (res.data.length > 0) {\r\n        const message = res.data[0]\r\n        const isReceived = !message.isMine\r\n        \r\n        if (isReceived) {\r\n          setOtherUser({\r\n            id: message.sender.id,\r\n            username: message.sender.username,\r\n            profileImage: message.sender.profileImage\r\n          })\r\n        } else {\r\n          // Si el primer mensaje es mío, necesitamos obtener la info del usuario de otra manera\r\n          const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`)\r\n          setOtherUser({\r\n            id: userRes.data.id,\r\n            username: userRes.data.username,\r\n            profileImage: userRes.data.profileImage\r\n          })\r\n        }\r\n      } else {\r\n        // Si no hay mensajes, obtener información del usuario\r\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`)\r\n        setOtherUser({\r\n          id: userRes.data.id,\r\n          username: userRes.data.username,\r\n          profileImage: userRes.data.profileImage\r\n        })\r\n      }\r\n      \r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.error(\"Error al cargar mensajes:\", error)\r\n      setError(\"Error al cargar mensajes\")\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Cargar mensajes al montar el componente o cambiar de usuario\r\n  useEffect(() => {\r\n    fetchMessages()\r\n    \r\n    // Actualizar mensajes cada 10 segundos\r\n    const interval = setInterval(fetchMessages, 10000)\r\n    return () => clearInterval(interval)\r\n  }, [userId])\r\n\r\n  // Desplazarse al último mensaje cuando se cargan o envían mensajes\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n  }, [messages])\r\n\r\n  // Enviar mensaje\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault()\r\n    \r\n    if (!newMessage.trim()) return\r\n    \r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/messages\", {\r\n        receiverId: userId,\r\n        content: newMessage\r\n      })\r\n      \r\n      // Añadir el nuevo mensaje a la lista\r\n      setMessages([...messages, {\r\n        ...res.data,\r\n        isMine: true\r\n      }])\r\n      \r\n      // Limpiar el campo de texto\r\n      setNewMessage(\"\")\r\n    } catch (error) {\r\n      console.error(\"Error al enviar mensaje:\", error)\r\n      alert(\"Error al enviar mensaje\")\r\n    }\r\n  }\r\n\r\n  if (loading && !otherUser) {\r\n    return <div className=\"loading\">Cargando conversación...</div>\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"conversation-container\">\r\n      {otherUser && (\r\n        <div className=\"conversation-header\">\r\n          <Link to=\"/messages\" className=\"back-button\">\r\n            &larr; Volver\r\n          </Link>\r\n          <Link to={`/profile/${otherUser.username}`} className=\"user-info\">\r\n            <img \r\n              src={otherUser.profileImage ? `http://localhost:5000${otherUser.profileImage}` : \"/placeholder.svg?height=40&width=40\"} \r\n              alt={otherUser.username}\r\n              className=\"user-avatar\"\r\n            />\r\n            <h2>{otherUser.username}</h2>\r\n          </Link>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"messages-list\">\r\n        {messages.length > 0 ? (\r\n          messages.map(message => (\r\n            <div \r\n              key={message.id}\r\n              className={`message ${message.isMine ? 'message-mine' : 'message-other'}`}\r\n            >\r\n              {!message.isMine && (\r\n                <img \r\n                  src={message.sender.profileImage ? `http://localhost:5000${message.sender.profileImage}` : \"/placeholder.svg?height=30&width=30\"} \r\n                  alt={message.sender.username}\r\n                  className=\"message-avatar\"\r\n                />\r\n              )}\r\n              <div className=\"message-bubble\">\r\n                <p>{message.content}</p>\r\n                <span className=\"message-time\">\r\n                  {new Date(message.createdAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                  {message.isMine && (\r\n                    <span className=\"message-status\">\r\n                      {message.isRead ? ' ✓✓' : ' ✓'}\r\n                    </span>\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p className=\"no-messages\">No hay mensajes. ¡Envía el primero!</p>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <form className=\"message-form\" onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Escribe un mensaje...\"\r\n          className=\"message-input\"\r\n        />\r\n        <button type=\"submit\" className=\"send-button\">\r\n          Enviar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Conversation"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}