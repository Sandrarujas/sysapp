{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\34615\\\\Desktop\\\\TFC_sys\\\\ProyectoFinal_sys\\\\client\\\\src\\\\components\\\\NotificationList.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // <-- Importa useNavigate\nimport axios from \"axios\";\nimport \"../App.css\";\nimport NotificationModal from \"./NotificationModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationList = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  // Nuevo estado para modal\n  const [selectedNotification, setSelectedNotification] = useState(null);\n  const navigate = useNavigate(); // Para navegación programática\n\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n  const fetchNotifications = async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/notifications?limit=5\");\n      setNotifications(res.data.notifications);\n      setUnreadCount(res.data.unreadCount);\n      setLoading(false);\n    } catch (error) {\n      setError(\"No se pudieron cargar las notificaciones\");\n      setLoading(false);\n    }\n  };\n  const markAsRead = async id => {\n    try {\n      await axios.put(`http://localhost:5000/api/notifications/${id}/read`);\n      setNotifications(notifications.map(notif => notif.id === id ? {\n        ...notif,\n        isRead: true\n      } : notif));\n      setUnreadCount(prev => prev > 0 ? prev - 1 : 0);\n    } catch (error) {\n      console.error(\"Error al marcar notificación:\", error);\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      await axios.put(\"http://localhost:5000/api/notifications/read-all\");\n      setNotifications(notifications.map(notif => ({\n        ...notif,\n        isRead: true\n      })));\n      setUnreadCount(0);\n    } catch (error) {\n      console.error(\"Error al marcar todas las notificaciones:\", error);\n    }\n  };\n  const toggleDropdown = () => {\n    setShowDropdown(!showDropdown);\n  };\n  const openModal = notification => {\n    if (!notification.isRead) markAsRead(notification.id);\n    setSelectedNotification(notification);\n  };\n  const closeModal = () => {\n    setSelectedNotification(null);\n  };\n  const handleNavigate = url => {\n    closeModal();\n    navigate(url);\n  };\n  const getNotificationContent = notification => {\n    const {\n      type,\n      senderUsername\n    } = notification;\n    switch (type) {\n      case \"like\":\n        return `${senderUsername} le dio like a tu publicación`;\n      case \"comment\":\n        return `${senderUsername} comentó en tu publicación`;\n      case \"follow\":\n        return `${senderUsername} comenzó a seguirte`;\n      default:\n        return `Nueva notificación de ${senderUsername}`;\n    }\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case \"like\":\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-heart notification-icon like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }, this);\n      case \"comment\":\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-comment notification-icon comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }, this);\n      case \"follow\":\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user-plus notification-icon follow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-bell notification-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getImageUrl = imagePath => {\n    if (!imagePath) return \"/placeholder.svg?height=40&width=40\";\n    if (imagePath.startsWith(\"http\")) return imagePath;\n    return `http://localhost:5000${imagePath}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-bell\",\n      onClick: toggleDropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-bell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notificaciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mark-all-read\",\n          onClick: markAllAsRead,\n          children: \"Marcar todas como le\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-loading\",\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this) : notifications.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-list\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.isRead ? \"unread\" : \"\"}`,\n          onClick: () => openModal(notification),\n          style: {\n            cursor: \"pointer\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: getImageUrl(notification.senderProfileImage) || \"/placeholder.svg\",\n              alt: notification.senderUsername,\n              className: \"notification-user-image\",\n              onError: e => {\n                e.target.src = \"/placeholder.svg?height=40&width=40\";\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this), getNotificationIcon(notification.type)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: getNotificationContent(notification)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-time\",\n              children: new Date(notification.createdAt).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this), !notification.isRead && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 44\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-empty\",\n        children: \"No tienes notificaciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-footer\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/notifications\",\n          className: \"view-all\",\n          children: \"Ver todas las notificaciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), selectedNotification && /*#__PURE__*/_jsxDEV(NotificationModal, {\n      notification: selectedNotification,\n      onClose: closeModal,\n      onNavigate: handleNavigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationList, \"r8Zk6UR+Leo6Rjmg4ZtbeCljd/0=\", false, function () {\n  return [useNavigate];\n});\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["useState","useEffect","useNavigate","axios","NotificationModal","jsxDEV","_jsxDEV","NotificationList","_s","notifications","setNotifications","unreadCount","setUnreadCount","loading","setLoading","error","setError","showDropdown","setShowDropdown","selectedNotification","setSelectedNotification","navigate","fetchNotifications","res","get","data","markAsRead","id","put","map","notif","isRead","prev","console","markAllAsRead","toggleDropdown","openModal","notification","closeModal","handleNavigate","url","getNotificationContent","type","senderUsername","getNotificationIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getImageUrl","imagePath","startsWith","children","onClick","length","style","cursor","src","senderProfileImage","alt","onError","e","target","Date","createdAt","toLocaleDateString","Link","to","onClose","onNavigate","_c","$RefreshReg$"],"sources":["C:/Users/34615/Desktop/TFC_sys/ProyectoFinal_sys/client/src/components/NotificationList.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"  // <-- Importa useNavigate\r\nimport axios from \"axios\"\r\nimport \"../App.css\"\r\nimport NotificationModal from \"./NotificationModal\"\r\n\r\nconst NotificationList = () => {\r\n  const [notifications, setNotifications] = useState([])\r\n  const [unreadCount, setUnreadCount] = useState(0)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(\"\")\r\n  const [showDropdown, setShowDropdown] = useState(false)\r\n\r\n  // Nuevo estado para modal\r\n  const [selectedNotification, setSelectedNotification] = useState(null)\r\n\r\n  const navigate = useNavigate() // Para navegación programática\r\n\r\n  useEffect(() => {\r\n    fetchNotifications()\r\n  }, [])\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const res = await axios.get(\"http://localhost:5000/api/notifications?limit=5\")\r\n      setNotifications(res.data.notifications)\r\n      setUnreadCount(res.data.unreadCount)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      setError(\"No se pudieron cargar las notificaciones\")\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const markAsRead = async (id) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/notifications/${id}/read`)\r\n      setNotifications(\r\n        notifications.map((notif) => \r\n          notif.id === id ? { ...notif, isRead: true } : notif\r\n        )\r\n      )\r\n      setUnreadCount(prev => (prev > 0 ? prev - 1 : 0))\r\n    } catch (error) {\r\n      console.error(\"Error al marcar notificación:\", error)\r\n    }\r\n  }\r\n\r\n  const markAllAsRead = async () => {\r\n    try {\r\n      await axios.put(\"http://localhost:5000/api/notifications/read-all\")\r\n      setNotifications(\r\n        notifications.map((notif) => ({ ...notif, isRead: true }))\r\n      )\r\n      setUnreadCount(0)\r\n    } catch (error) {\r\n      console.error(\"Error al marcar todas las notificaciones:\", error)\r\n    }\r\n  }\r\n\r\n  const toggleDropdown = () => {\r\n    setShowDropdown(!showDropdown)\r\n  }\r\n\r\n  const openModal = (notification) => {\r\n    if (!notification.isRead) markAsRead(notification.id)\r\n    setSelectedNotification(notification)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setSelectedNotification(null)\r\n  }\r\n\r\n  const handleNavigate = (url) => {\r\n    closeModal()\r\n    navigate(url)\r\n  }\r\n\r\n  const getNotificationContent = (notification) => {\r\n    const { type, senderUsername } = notification\r\n    switch (type) {\r\n      case \"like\":\r\n        return `${senderUsername} le dio like a tu publicación`\r\n      case \"comment\":\r\n        return `${senderUsername} comentó en tu publicación`\r\n      case \"follow\":\r\n        return `${senderUsername} comenzó a seguirte`\r\n      default:\r\n        return `Nueva notificación de ${senderUsername}`\r\n    }\r\n  }\r\n\r\n  const getNotificationIcon = (type) => {\r\n    switch (type) {\r\n      case \"like\":\r\n        return <i className=\"fas fa-heart notification-icon like\"></i>\r\n      case \"comment\":\r\n        return <i className=\"fas fa-comment notification-icon comment\"></i>\r\n      case \"follow\":\r\n        return <i className=\"fas fa-user-plus notification-icon follow\"></i>\r\n      default:\r\n        return <i className=\"fas fa-bell notification-icon\"></i>\r\n    }\r\n  }\r\n\r\n  const getImageUrl = (imagePath) => {\r\n    if (!imagePath) return \"/placeholder.svg?height=40&width=40\"\r\n    if (imagePath.startsWith(\"http\")) return imagePath\r\n    return `http://localhost:5000${imagePath}`\r\n  }\r\n\r\n  return (\r\n    <div className=\"notification-container\">\r\n      <div className=\"notification-bell\" onClick={toggleDropdown}>\r\n        <i className=\"fas fa-bell\"></i>\r\n        {unreadCount > 0 && <span className=\"notification-badge\">{unreadCount}</span>}\r\n      </div>\r\n\r\n      {showDropdown && (\r\n        <div className=\"notification-dropdown\">\r\n          <div className=\"notification-header\">\r\n            <h3>Notificaciones</h3>\r\n            {unreadCount > 0 && (\r\n              <button className=\"mark-all-read\" onClick={markAllAsRead}>\r\n                Marcar todas como leídas\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {loading ? (\r\n            <div className=\"notification-loading\">Cargando...</div>\r\n          ) : error ? (\r\n            <div className=\"notification-error\">{error}</div>\r\n          ) : notifications.length > 0 ? (\r\n            <div className=\"notification-list\">\r\n              {notifications.map((notification) => (\r\n                <div\r\n                  key={notification.id}\r\n                  className={`notification-item ${!notification.isRead ? \"unread\" : \"\"}`}\r\n                  onClick={() => openModal(notification)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <div className=\"notification-avatar\">\r\n                    <img\r\n                      src={getImageUrl(notification.senderProfileImage) || \"/placeholder.svg\"}\r\n                      alt={notification.senderUsername}\r\n                      className=\"notification-user-image\"\r\n                      onError={(e) => {\r\n                        e.target.src = \"/placeholder.svg?height=40&width=40\"\r\n                      }}\r\n                    />\r\n                    {getNotificationIcon(notification.type)}\r\n                  </div>\r\n                  <div className=\"notification-content\">\r\n                    <p>{getNotificationContent(notification)}</p>\r\n                    <span className=\"notification-time\">\r\n                      {new Date(notification.createdAt).toLocaleDateString()}\r\n                    </span>\r\n                  </div>\r\n                  {!notification.isRead && <div className=\"notification-dot\"></div>}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"notification-empty\">No tienes notificaciones</div>\r\n          )}\r\n\r\n          <div className=\"notification-footer\">\r\n            <Link to=\"/notifications\" className=\"view-all\">\r\n              Ver todas las notificaciones\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Aquí montamos el modal */}\r\n      {selectedNotification && (\r\n        <NotificationModal\r\n          notification={selectedNotification}\r\n          onClose={closeModal}\r\n          onNavigate={handleNavigate}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotificationList\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}