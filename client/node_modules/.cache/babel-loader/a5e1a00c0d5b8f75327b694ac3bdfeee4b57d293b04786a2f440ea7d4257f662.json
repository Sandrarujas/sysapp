{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\34615\\\\Desktop\\\\ProyectoFinal_sys\\\\client\\\\src\\\\components\\\\NotificationList.jsx\",\n  _s = $RefreshSig$();\n// client/src/components/NotificationList.jsx\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/Notifications.css\"; // Asegúrate de crear este archivo CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationList = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showDropdown, setShowDropdown] = useState(false);\n  useEffect(() => {\n    // Cargar notificaciones cuando se muestra el dropdown\n    if (showDropdown) {\n      fetchNotifications();\n    }\n  }, [showDropdown]);\n\n  // También podemos cargar el contador de no leídas al inicio\n  useEffect(() => {\n    fetchUnreadCount();\n  }, []);\n  const fetchUnreadCount = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/notifications/unread-count\");\n      setUnreadCount(res.data.count);\n    } catch (error) {\n      console.error(\"Error al cargar contador de notificaciones:\", error);\n    }\n  };\n  const fetchNotifications = async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/notifications?limit=5\");\n      setNotifications(res.data.notifications);\n      setUnreadCount(res.data.unreadCount);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error al cargar notificaciones:\", error);\n      setError(\"No se pudieron cargar las notificaciones\");\n      setLoading(false);\n    }\n  };\n  const markAsRead = async id => {\n    try {\n      await axios.put(`http://localhost:5000/api/notifications/${id}/read`);\n\n      // Actualizar estado local\n      setNotifications(notifications.map(notif => notif.id === id ? {\n        ...notif,\n        isRead: true\n      } : notif));\n\n      // Actualizar contador de no leídas\n      setUnreadCount(prev => prev > 0 ? prev - 1 : 0);\n    } catch (error) {\n      console.error(\"Error al marcar notificación:\", error);\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      await axios.put(\"http://localhost:5000/api/notifications/read-all\");\n\n      // Actualizar estado local\n      setNotifications(notifications.map(notif => ({\n        ...notif,\n        isRead: true\n      })));\n\n      // Actualizar contador\n      setUnreadCount(0);\n    } catch (error) {\n      console.error(\"Error al marcar todas las notificaciones:\", error);\n    }\n  };\n  const toggleDropdown = () => {\n    setShowDropdown(!showDropdown);\n  };\n  const getNotificationContent = notification => {\n    const {\n      type,\n      senderUsername\n    } = notification;\n    switch (type) {\n      case 'like':\n        return `${senderUsername} le dio like a tu publicación`;\n      case 'comment':\n        return `${senderUsername} comentó en tu publicación`;\n      case 'follow':\n        return `${senderUsername} comenzó a seguirte`;\n      default:\n        return `Nueva notificación de ${senderUsername}`;\n    }\n  };\n  const getNotificationLink = notification => {\n    const {\n      type,\n      postId,\n      senderUsername\n    } = notification;\n    switch (type) {\n      case 'like':\n      case 'comment':\n        return `/post/${postId}`;\n      case 'follow':\n        return `/profile/${senderUsername}`;\n      default:\n        return '#';\n    }\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'like':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-heart notification-icon like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 16\n        }, this);\n      case 'comment':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-comment notification-icon comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 16\n        }, this);\n      case 'follow':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user-plus notification-icon follow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-bell notification-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-bell\",\n      onClick: toggleDropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-bell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notificaciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mark-all-read\",\n          onClick: markAllAsRead,\n          children: \"Marcar todas como le\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-loading\",\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this) : notifications.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-list\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(Link, {\n          to: getNotificationLink(notification),\n          className: `notification-item ${!notification.isRead ? 'unread' : ''}`,\n          onClick: () => !notification.isRead && markAsRead(notification.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: notification.senderProfileImage || \"/placeholder.svg?height=40&width=40\",\n              alt: notification.senderUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this), getNotificationIcon(notification.type)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: getNotificationContent(notification)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-time\",\n              children: new Date(notification.createdAt).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 19\n          }, this), !notification.isRead && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 44\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-empty\",\n        children: \"No tienes notificaciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-footer\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/notifications\",\n          className: \"view-all\",\n          children: \"Ver todas las notificaciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationList, \"enBJcIoozNEVjyxBj0Pj4bknijg=\");\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["useState","useEffect","Link","axios","jsxDEV","_jsxDEV","NotificationList","_s","notifications","setNotifications","unreadCount","setUnreadCount","loading","setLoading","error","setError","showDropdown","setShowDropdown","fetchNotifications","fetchUnreadCount","res","get","data","count","console","markAsRead","id","put","map","notif","isRead","prev","markAllAsRead","toggleDropdown","getNotificationContent","notification","type","senderUsername","getNotificationLink","postId","getNotificationIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","length","to","src","senderProfileImage","alt","Date","createdAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/34615/Desktop/ProyectoFinal_sys/client/src/components/NotificationList.jsx"],"sourcesContent":["// client/src/components/NotificationList.jsx\r\nimport { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport \"../styles/Notifications.css\" // Asegúrate de crear este archivo CSS\r\n\r\nconst NotificationList = () => {\r\n  const [notifications, setNotifications] = useState([])\r\n  const [unreadCount, setUnreadCount] = useState(0)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(\"\")\r\n  const [showDropdown, setShowDropdown] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // Cargar notificaciones cuando se muestra el dropdown\r\n    if (showDropdown) {\r\n      fetchNotifications()\r\n    }\r\n  }, [showDropdown])\r\n\r\n  // También podemos cargar el contador de no leídas al inicio\r\n  useEffect(() => {\r\n    fetchUnreadCount()\r\n  }, [])\r\n\r\n  const fetchUnreadCount = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:5000/api/notifications/unread-count\")\r\n      setUnreadCount(res.data.count)\r\n    } catch (error) {\r\n      console.error(\"Error al cargar contador de notificaciones:\", error)\r\n    }\r\n  }\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const res = await axios.get(\"http://localhost:5000/api/notifications?limit=5\")\r\n      setNotifications(res.data.notifications)\r\n      setUnreadCount(res.data.unreadCount)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.error(\"Error al cargar notificaciones:\", error)\r\n      setError(\"No se pudieron cargar las notificaciones\")\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const markAsRead = async (id) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/notifications/${id}/read`)\r\n      \r\n      // Actualizar estado local\r\n      setNotifications(\r\n        notifications.map((notif) => \r\n          notif.id === id ? { ...notif, isRead: true } : notif\r\n        )\r\n      )\r\n      \r\n      // Actualizar contador de no leídas\r\n      setUnreadCount(prev => prev > 0 ? prev - 1 : 0)\r\n    } catch (error) {\r\n      console.error(\"Error al marcar notificación:\", error)\r\n    }\r\n  }\r\n\r\n  const markAllAsRead = async () => {\r\n    try {\r\n      await axios.put(\"http://localhost:5000/api/notifications/read-all\")\r\n      \r\n      // Actualizar estado local\r\n      setNotifications(\r\n        notifications.map((notif) => ({ ...notif, isRead: true }))\r\n      )\r\n      \r\n      // Actualizar contador\r\n      setUnreadCount(0)\r\n    } catch (error) {\r\n      console.error(\"Error al marcar todas las notificaciones:\", error)\r\n    }\r\n  }\r\n\r\n  const toggleDropdown = () => {\r\n    setShowDropdown(!showDropdown)\r\n  }\r\n\r\n  const getNotificationContent = (notification) => {\r\n    const { type, senderUsername } = notification\r\n    \r\n    switch (type) {\r\n      case 'like':\r\n        return `${senderUsername} le dio like a tu publicación`\r\n      case 'comment':\r\n        return `${senderUsername} comentó en tu publicación`\r\n      case 'follow':\r\n        return `${senderUsername} comenzó a seguirte`\r\n      default:\r\n        return `Nueva notificación de ${senderUsername}`\r\n    }\r\n  }\r\n\r\n  const getNotificationLink = (notification) => {\r\n    const { type, postId, senderUsername } = notification\r\n    \r\n    switch (type) {\r\n      case 'like':\r\n      case 'comment':\r\n        return `/post/${postId}`\r\n      case 'follow':\r\n        return `/profile/${senderUsername}`\r\n      default:\r\n        return '#'\r\n    }\r\n  }\r\n\r\n  const getNotificationIcon = (type) => {\r\n    switch (type) {\r\n      case 'like':\r\n        return <i className=\"fas fa-heart notification-icon like\"></i>\r\n      case 'comment':\r\n        return <i className=\"fas fa-comment notification-icon comment\"></i>\r\n      case 'follow':\r\n        return <i className=\"fas fa-user-plus notification-icon follow\"></i>\r\n      default:\r\n        return <i className=\"fas fa-bell notification-icon\"></i>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"notification-container\">\r\n      <div className=\"notification-bell\" onClick={toggleDropdown}>\r\n        <i className=\"fas fa-bell\"></i>\r\n        {unreadCount > 0 && <span className=\"notification-badge\">{unreadCount}</span>}\r\n      </div>\r\n\r\n      {showDropdown && (\r\n        <div className=\"notification-dropdown\">\r\n          <div className=\"notification-header\">\r\n            <h3>Notificaciones</h3>\r\n            {unreadCount > 0 && (\r\n              <button className=\"mark-all-read\" onClick={markAllAsRead}>\r\n                Marcar todas como leídas\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {loading ? (\r\n            <div className=\"notification-loading\">Cargando...</div>\r\n          ) : error ? (\r\n            <div className=\"notification-error\">{error}</div>\r\n          ) : notifications.length > 0 ? (\r\n            <div className=\"notification-list\">\r\n              {notifications.map((notification) => (\r\n                <Link\r\n                  key={notification.id}\r\n                  to={getNotificationLink(notification)}\r\n                  className={`notification-item ${!notification.isRead ? 'unread' : ''}`}\r\n                  onClick={() => !notification.isRead && markAsRead(notification.id)}\r\n                >\r\n                  <div className=\"notification-avatar\">\r\n                    <img\r\n                      src={notification.senderProfileImage || \"/placeholder.svg?height=40&width=40\"}\r\n                      alt={notification.senderUsername}\r\n                    />\r\n                    {getNotificationIcon(notification.type)}\r\n                  </div>\r\n                  <div className=\"notification-content\">\r\n                    <p>{getNotificationContent(notification)}</p>\r\n                    <span className=\"notification-time\">\r\n                      {new Date(notification.createdAt).toLocaleDateString()}\r\n                    </span>\r\n                  </div>\r\n                  {!notification.isRead && <div className=\"notification-dot\"></div>}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"notification-empty\">No tienes notificaciones</div>\r\n          )}\r\n\r\n          <div className=\"notification-footer\">\r\n            <Link to=\"/notifications\" className=\"view-all\">\r\n              Ver todas las notificaciones\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotificationList"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}