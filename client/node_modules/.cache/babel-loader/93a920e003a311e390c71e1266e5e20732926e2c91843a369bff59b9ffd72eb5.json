{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\34615\\\\Desktop\\\\ProyectoFinal_sys\\\\client\\\\src\\\\components\\\\NotificationList.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Avatar from \"./Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationList = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [unreadCount, setUnreadCount] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n  const fetchNotifications = async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/notifications\");\n      setNotifications(res.data.notifications);\n      setUnreadCount(res.data.unreadCount);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error al cargar notificaciones:\", error);\n      setError(\"Error al cargar notificaciones\");\n      setLoading(false);\n    }\n  };\n  const markAsRead = async notificationId => {\n    try {\n      await axios.put(`http://localhost:5000/api/notifications/${notificationId}/read`);\n\n      // Actualizar el estado local\n      setNotifications(notifications.map(notification => notification.id === notificationId ? {\n        ...notification,\n        isRead: true\n      } : notification));\n\n      // Actualizar contador de no leídas\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error(\"Error al marcar notificación como leída:\", error);\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      await axios.put(\"http://localhost:5000/api/notifications/read-all\");\n\n      // Actualizar el estado local\n      setNotifications(notifications.map(notification => ({\n        ...notification,\n        isRead: true\n      })));\n\n      // Actualizar contador\n      setUnreadCount(0);\n    } catch (error) {\n      console.error(\"Error al marcar todas como leídas:\", error);\n    }\n  };\n  const handleNotificationClick = async notification => {\n    // Marcar como leída\n    if (!notification.isRead) {\n      await markAsRead(notification.id);\n    }\n\n    // Navegar según el tipo de notificación\n    switch (notification.type) {\n      case \"like\":\n      case \"comment\":\n        if (notification.postId) {\n          // Navegar al post\n          navigate(`/post/${notification.postId}`);\n        }\n        break;\n      case \"follow\":\n        // Navegar al perfil del seguidor\n        navigate(`/profile/${notification.senderUsername}`);\n        break;\n      default:\n        console.warn(\"Tipo de notificación desconocido:\", notification.type);\n    }\n  };\n  const getNotificationText = notification => {\n    let text = \"\";\n    switch (notification.type) {\n      case \"like\":\n        text = `le ha dado me gusta a tu publicación`;\n        if (notification.postContent) {\n          text += `: \"${notification.postContent.substring(0, 30)}${notification.postContent.length > 30 ? \"...\" : \"\"}\"`;\n        }\n        break;\n      case \"comment\":\n        text = `ha comentado en tu publicación`;\n        if (notification.postContent) {\n          text += `: \"${notification.postContent.substring(0, 30)}${notification.postContent.length > 30 ? \"...\" : \"\"}\"`;\n        }\n        break;\n      case \"follow\":\n        text = `ha comenzado a seguirte`;\n        break;\n      default:\n        text = \"ha interactuado contigo\";\n    }\n    return text;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando notificaciones...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Notificaciones \", unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"unread-count\",\n          children: [\"(\", unreadCount, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mark-all-read\",\n        onClick: markAllAsRead,\n        children: \"Marcar todas como le\\xEDdas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notifications\",\n      children: \"No tienes notificaciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-list\",\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `notification-item ${!notification.isRead ? \"unread\" : \"\"}`,\n        onClick: () => handleNotificationClick(notification),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-avatar\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: notification.senderProfileImage,\n            username: notification.senderUsername,\n            size: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-username\",\n              children: notification.senderUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), \" \", getNotificationText(notification)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-time\",\n            children: new Date(notification.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), !notification.isRead && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-badge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 40\n        }, this)]\n      }, notification.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationList, \"caqnWuNXfGANE/vc08v6kSvf2UY=\", false, function () {\n  return [useNavigate];\n});\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useNavigate","axios","Avatar","jsxDEV","_jsxDEV","NotificationList","notifications","setNotifications","loading","setLoading","error","setError","unreadCount","setUnreadCount","navigate","fetchNotifications","res","get","data","console","markAsRead","notificationId","put","map","notification","id","isRead","prev","Math","max","markAllAsRead","handleNotificationClick","type","postId","senderUsername","warn","getNotificationText","text","postContent","substring","length","className","children","fileName","lineNumber","columnNumber","onClick","src","senderProfileImage","username","size","Date","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/34615/Desktop/ProyectoFinal_sys/client/src/components/NotificationList.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport Avatar from \"./Avatar\"\r\n\r\nconst NotificationList = () => {\r\n  const [notifications, setNotifications] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(\"\")\r\n  const [unreadCount, setUnreadCount] = useState(0)\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    fetchNotifications()\r\n  }, [])\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const res = await axios.get(\"http://localhost:5000/api/notifications\")\r\n      setNotifications(res.data.notifications)\r\n      setUnreadCount(res.data.unreadCount)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.error(\"Error al cargar notificaciones:\", error)\r\n      setError(\"Error al cargar notificaciones\")\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const markAsRead = async (notificationId) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/notifications/${notificationId}/read`)\r\n\r\n      // Actualizar el estado local\r\n      setNotifications(\r\n        notifications.map((notification) =>\r\n          notification.id === notificationId ? { ...notification, isRead: true } : notification,\r\n        ),\r\n      )\r\n\r\n      // Actualizar contador de no leídas\r\n      setUnreadCount((prev) => Math.max(0, prev - 1))\r\n    } catch (error) {\r\n      console.error(\"Error al marcar notificación como leída:\", error)\r\n    }\r\n  }\r\n\r\n  const markAllAsRead = async () => {\r\n    try {\r\n      await axios.put(\"http://localhost:5000/api/notifications/read-all\")\r\n\r\n      // Actualizar el estado local\r\n      setNotifications(notifications.map((notification) => ({ ...notification, isRead: true })))\r\n\r\n      // Actualizar contador\r\n      setUnreadCount(0)\r\n    } catch (error) {\r\n      console.error(\"Error al marcar todas como leídas:\", error)\r\n    }\r\n  }\r\n\r\n  const handleNotificationClick = async (notification) => {\r\n    // Marcar como leída\r\n    if (!notification.isRead) {\r\n      await markAsRead(notification.id)\r\n    }\r\n\r\n    // Navegar según el tipo de notificación\r\n    switch (notification.type) {\r\n      case \"like\":\r\n      case \"comment\":\r\n        if (notification.postId) {\r\n          // Navegar al post\r\n          navigate(`/post/${notification.postId}`)\r\n        }\r\n        break\r\n      case \"follow\":\r\n        // Navegar al perfil del seguidor\r\n        navigate(`/profile/${notification.senderUsername}`)\r\n        break\r\n      default:\r\n        console.warn(\"Tipo de notificación desconocido:\", notification.type)\r\n    }\r\n  }\r\n\r\n  const getNotificationText = (notification) => {\r\n    let text = \"\"\r\n\r\n    switch (notification.type) {\r\n      case \"like\":\r\n        text = `le ha dado me gusta a tu publicación`\r\n        if (notification.postContent) {\r\n          text += `: \"${notification.postContent.substring(0, 30)}${notification.postContent.length > 30 ? \"...\" : \"\"}\"`\r\n        }\r\n        break\r\n      case \"comment\":\r\n        text = `ha comentado en tu publicación`\r\n        if (notification.postContent) {\r\n          text += `: \"${notification.postContent.substring(0, 30)}${notification.postContent.length > 30 ? \"...\" : \"\"}\"`\r\n        }\r\n        break\r\n      case \"follow\":\r\n        text = `ha comenzado a seguirte`\r\n        break\r\n      default:\r\n        text = \"ha interactuado contigo\"\r\n    }\r\n\r\n    return text\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Cargando notificaciones...</div>\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"notifications-container\">\r\n      <div className=\"notifications-header\">\r\n        <h2>Notificaciones {unreadCount > 0 && <span className=\"unread-count\">({unreadCount})</span>}</h2>\r\n        {unreadCount > 0 && (\r\n          <button className=\"mark-all-read\" onClick={markAllAsRead}>\r\n            Marcar todas como leídas\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {notifications.length === 0 ? (\r\n        <div className=\"no-notifications\">No tienes notificaciones</div>\r\n      ) : (\r\n        <div className=\"notifications-list\">\r\n          {notifications.map((notification) => (\r\n            <div\r\n              key={notification.id}\r\n              className={`notification-item ${!notification.isRead ? \"unread\" : \"\"}`}\r\n              onClick={() => handleNotificationClick(notification)}\r\n            >\r\n              <div className=\"notification-avatar\">\r\n                <Avatar src={notification.senderProfileImage} username={notification.senderUsername} size={40} />\r\n              </div>\r\n              <div className=\"notification-content\">\r\n                <div className=\"notification-text\">\r\n                  <span className=\"notification-username\">{notification.senderUsername}</span>{\" \"}\r\n                  {getNotificationText(notification)}\r\n                </div>\r\n                <div className=\"notification-time\">{new Date(notification.createdAt).toLocaleString()}</div>\r\n              </div>\r\n              {!notification.isRead && <div className=\"notification-badge\"></div>}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotificationList\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}