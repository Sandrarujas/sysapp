{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\34615\\\\Desktop\\\\ProyectoFinal_sys\\\\client\\\\src\\\\pages\\\\Notifications.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NotificationModal from \"..components/NotificationModal\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    total: 0,\n    totalPages: 0\n  });\n  const [selectedNotification, setSelectedNotification] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        setLoading(true);\n        const res = await axios.get(`http://localhost:5000/api/notifications?page=${pagination.page}&limit=${pagination.limit}`, {\n          withCredentials: true\n        });\n        setNotifications(res.data.notifications);\n        setPagination(res.data.pagination);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error al cargar notificaciones:\", error);\n        setError(\"No se pudieron cargar las notificaciones\");\n        setLoading(false);\n      }\n    };\n    fetchNotifications();\n  }, [pagination.page, pagination.limit]);\n  const markAsRead = async id => {\n    try {\n      await axios.put(`http://localhost:5000/api/notifications/${id}/read`, {}, {\n        withCredentials: true\n      });\n      setNotifications(notifications.map(notif => notif.id === id ? {\n        ...notif,\n        isRead: true\n      } : notif));\n    } catch (error) {\n      console.error(\"Error al marcar notificación:\", error);\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      await axios.put(\"http://localhost:5000/api/notifications/read-all\", {}, {\n        withCredentials: true\n      });\n      setNotifications(notifications.map(notif => ({\n        ...notif,\n        isRead: true\n      })));\n    } catch (error) {\n      console.error(\"Error al marcar todas las notificaciones:\", error);\n    }\n  };\n  const openNotificationModal = async notification => {\n    if (!notification.isRead) {\n      await markAsRead(notification.id);\n    }\n    setSelectedNotification(notification);\n  };\n  const closeModal = () => {\n    setSelectedNotification(null);\n  };\n  const navigateTo = url => {\n    navigate(url);\n    closeModal();\n  };\n  const getNotificationContent = notification => {\n    const {\n      type,\n      senderUsername\n    } = notification;\n    switch (type) {\n      case \"like\":\n        return `${senderUsername} le dio like a tu publicación`;\n      case \"comment\":\n        return `${senderUsername} comentó en tu publicación`;\n      case \"follow\":\n        return `${senderUsername} comenzó a seguirte`;\n      default:\n        return `Nueva notificación de ${senderUsername}`;\n    }\n  };\n  const getImageUrl = imagePath => {\n    if (!imagePath) return \"/placeholder.svg?height=40&width=40\";\n    if (imagePath.startsWith(\"http\")) return imagePath;\n    return `http://localhost:5000${imagePath}`;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-loading\",\n    children: \"Cargando notificaciones...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notificaciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mark-all-read-btn\",\n        onClick: markAllAsRead,\n        children: \"Marcar todas como le\\xEDdas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-empty\",\n      children: \"No tienes notificaciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-list\",\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `notification-item ${!notification.isRead ? \"unread\" : \"\"}`,\n        onClick: () => openNotificationModal(notification),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getImageUrl(notification.senderProfileImage),\n            alt: notification.senderUsername,\n            onError: e => {\n              e.target.src = \"/placeholder.svg?height=40&width=40\";\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: getNotificationContent(notification)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-time\",\n            children: [new Date(notification.createdAt).toLocaleDateString(), \" \", new Date(notification.createdAt).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), !notification.isRead && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 40\n        }, this)]\n      }, notification.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), pagination.totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pagination-button\",\n        onClick: () => setPagination({\n          ...pagination,\n          page: pagination.page - 1\n        }),\n        disabled: pagination.page === 1 || loading,\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-info\",\n        children: [\"P\\xE1gina \", pagination.page, \" de \", pagination.totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pagination-button\",\n        onClick: () => setPagination({\n          ...pagination,\n          page: pagination.page + 1\n        }),\n        disabled: pagination.page === pagination.totalPages || loading,\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), selectedNotification && /*#__PURE__*/_jsxDEV(NotificationModal, {\n      notification: selectedNotification,\n      onClose: closeModal,\n      onNavigate: navigateTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"rBAMGp3O5Pz/FvT28fRBnKej/5s=\", false, function () {\n  return [useNavigate];\n});\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useNavigate","axios","NotificationModal","jsxDEV","_jsxDEV","Notifications","notifications","setNotifications","loading","setLoading","error","setError","pagination","setPagination","page","limit","total","totalPages","selectedNotification","setSelectedNotification","navigate","fetchNotifications","res","get","withCredentials","data","console","markAsRead","id","put","map","notif","isRead","markAllAsRead","openNotificationModal","notification","closeModal","navigateTo","url","getNotificationContent","type","senderUsername","getImageUrl","imagePath","startsWith","className","children","fileName","lineNumber","columnNumber","onClick","length","src","senderProfileImage","alt","onError","e","target","Date","createdAt","toLocaleDateString","toLocaleTimeString","disabled","onClose","onNavigate","_c","$RefreshReg$"],"sources":["C:/Users/34615/Desktop/ProyectoFinal_sys/client/src/pages/Notifications.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport NotificationModal from \"..components/NotificationModal\"\r\nimport \"../App.css\"\r\n\r\nconst Notifications = () => {\r\n  const [notifications, setNotifications] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(\"\")\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    total: 0,\r\n    totalPages: 0,\r\n  })\r\n\r\n  const [selectedNotification, setSelectedNotification] = useState(null)\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const res = await axios.get(`http://localhost:5000/api/notifications?page=${pagination.page}&limit=${pagination.limit}`, {\r\n          withCredentials: true,\r\n        })\r\n        setNotifications(res.data.notifications)\r\n        setPagination(res.data.pagination)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        console.error(\"Error al cargar notificaciones:\", error)\r\n        setError(\"No se pudieron cargar las notificaciones\")\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchNotifications()\r\n  }, [pagination.page, pagination.limit])\r\n\r\n  const markAsRead = async (id) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/notifications/${id}/read`, {}, { withCredentials: true })\r\n      setNotifications(notifications.map((notif) => (notif.id === id ? { ...notif, isRead: true } : notif)))\r\n    } catch (error) {\r\n      console.error(\"Error al marcar notificación:\", error)\r\n    }\r\n  }\r\n\r\n  const markAllAsRead = async () => {\r\n    try {\r\n      await axios.put(\"http://localhost:5000/api/notifications/read-all\", {}, { withCredentials: true })\r\n      setNotifications(notifications.map((notif) => ({ ...notif, isRead: true })))\r\n    } catch (error) {\r\n      console.error(\"Error al marcar todas las notificaciones:\", error)\r\n    }\r\n  }\r\n\r\n  const openNotificationModal = async (notification) => {\r\n    if (!notification.isRead) {\r\n      await markAsRead(notification.id)\r\n    }\r\n    setSelectedNotification(notification)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setSelectedNotification(null)\r\n  }\r\n\r\n  const navigateTo = (url) => {\r\n    navigate(url)\r\n    closeModal()\r\n  }\r\n\r\n  const getNotificationContent = (notification) => {\r\n    const { type, senderUsername } = notification\r\n    switch (type) {\r\n      case \"like\":\r\n        return `${senderUsername} le dio like a tu publicación`\r\n      case \"comment\":\r\n        return `${senderUsername} comentó en tu publicación`\r\n      case \"follow\":\r\n        return `${senderUsername} comenzó a seguirte`\r\n      default:\r\n        return `Nueva notificación de ${senderUsername}`\r\n    }\r\n  }\r\n\r\n  const getImageUrl = (imagePath) => {\r\n    if (!imagePath) return \"/placeholder.svg?height=40&width=40\"\r\n    if (imagePath.startsWith(\"http\")) return imagePath\r\n    return `http://localhost:5000${imagePath}`\r\n  }\r\n\r\n  if (loading) return <div className=\"notifications-loading\">Cargando notificaciones...</div>\r\n  if (error) return <div className=\"notifications-error\">{error}</div>\r\n\r\n  return (\r\n    <div className=\"notifications-page\">\r\n      <div className=\"notifications-header\">\r\n        <h1>Notificaciones</h1>\r\n        <button className=\"mark-all-read-btn\" onClick={markAllAsRead}>\r\n          Marcar todas como leídas\r\n        </button>\r\n      </div>\r\n\r\n      {notifications.length === 0 ? (\r\n        <div className=\"notifications-empty\">No tienes notificaciones</div>\r\n      ) : (\r\n        <div className=\"notifications-list\">\r\n          {notifications.map((notification) => (\r\n            <div\r\n              key={notification.id}\r\n              className={`notification-item ${!notification.isRead ? \"unread\" : \"\"}`}\r\n              onClick={() => openNotificationModal(notification)}\r\n            >\r\n              <div className=\"notification-avatar\">\r\n                <img\r\n                  src={getImageUrl(notification.senderProfileImage)}\r\n                  alt={notification.senderUsername}\r\n                  onError={(e) => { e.target.src = \"/placeholder.svg?height=40&width=40\" }}\r\n                />\r\n                {/* Puedes añadir iconos aquí si quieres */}\r\n              </div>\r\n              <div className=\"notification-content\">\r\n                <p>{getNotificationContent(notification)}</p>\r\n                <span className=\"notification-time\">\r\n                  {new Date(notification.createdAt).toLocaleDateString()}{\" \"}\r\n                  {new Date(notification.createdAt).toLocaleTimeString()}\r\n                </span>\r\n              </div>\r\n              {!notification.isRead && <div className=\"notification-dot\"></div>}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {pagination.totalPages > 1 && (\r\n        <div className=\"notifications-pagination\">\r\n          <button\r\n            className=\"pagination-button\"\r\n            onClick={() => setPagination({ ...pagination, page: pagination.page - 1 })}\r\n            disabled={pagination.page === 1 || loading}\r\n          >\r\n            Anterior\r\n          </button>\r\n          <div className=\"pagination-info\">\r\n            Página {pagination.page} de {pagination.totalPages}\r\n          </div>\r\n          <button\r\n            className=\"pagination-button\"\r\n            onClick={() => setPagination({ ...pagination, page: pagination.page + 1 })}\r\n            disabled={pagination.page === pagination.totalPages || loading}\r\n          >\r\n            Siguiente\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {selectedNotification && (\r\n        <NotificationModal\r\n          notification={selectedNotification}\r\n          onClose={closeModal}\r\n          onNavigate={navigateTo}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}