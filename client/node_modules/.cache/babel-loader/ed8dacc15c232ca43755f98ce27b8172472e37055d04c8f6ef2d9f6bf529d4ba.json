{"ast":null,"code":"\"use client\";import{createContext,useState,useEffect,useCallback,useContext}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[notifications,setNotifications]=useState([]);const[unreadCount,setUnreadCount]=useState(0);const[notificationsLoading,setNotificationsLoading]=useState(false);const[posts,setPosts]=useState([]);const fetchNotifications=useCallback(async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:5;if(!user&&!localStorage.getItem(\"token\"))return;try{setNotificationsLoading(true);const res=await axios.get(`http://localhost:5000/api/notifications?limit=${limit}`);setNotifications(res.data.notifications);setUnreadCount(res.data.unreadCount);return res.data;}catch(error){console.error(\"Error al cargar notificaciones:\",error);}finally{setNotificationsLoading(false);}},[user]);useEffect(()=>{const checkLoggedIn=async()=>{try{const token=localStorage.getItem(\"token\");if(token){axios.defaults.headers.common[\"Authorization\"]=`Bearer ${token}`;const res=await axios.get(\"http://localhost:5000/api/auth/me\");setUser({id:res.data.id,username:res.data.username,email:res.data.email,role:res.data.role});}}catch(error){localStorage.removeItem(\"token\");delete axios.defaults.headers.common[\"Authorization\"];}setLoading(false);};checkLoggedIn();},[]);useEffect(()=>{if(user){fetchNotifications();}},[user,fetchNotifications]);useEffect(()=>{if(!user)return;const interval=setInterval(()=>{fetchNotifications();},30000);return()=>clearInterval(interval);},[user,fetchNotifications]);const login=async(email,password)=>{try{const res=await axios.post(\"http://localhost:5000/api/auth/login\",{email,password});localStorage.setItem(\"token\",res.data.token);axios.defaults.headers.common[\"Authorization\"]=`Bearer ${res.data.token}`;setUser({id:res.data.user.id,username:res.data.user.username,email:res.data.user.email,role:res.data.user.role});return true;}catch(error){return false;}};const register=async(username,email,password)=>{try{const res=await axios.post(\"http://localhost:5000/api/auth/register\",{username,email,password});localStorage.setItem(\"token\",res.data.token);axios.defaults.headers.common[\"Authorization\"]=`Bearer ${res.data.token}`;setUser({id:res.data.user.id,username:res.data.user.username,email:res.data.user.email,role:res.data.user.role});return true;}catch(error){return false;}};const logout=()=>{localStorage.removeItem(\"token\");delete axios.defaults.headers.common[\"Authorization\"];setUser(null);setNotifications([]);setUnreadCount(0);setPosts([]);};const updateUser=updatedData=>{setUser(prevUser=>({...prevUser,...updatedData}));};const refreshUser=async()=>{try{const token=localStorage.getItem(\"token\");if(token){const res=await axios.get(\"http://localhost:5000/api/auth/me\");setUser({id:res.data.id,username:res.data.username,email:res.data.email,role:res.data.role});return res.data;}}catch(error){console.error(\"Error refreshing user:\",error);}};const markNotificationAsRead=async id=>{try{await axios.put(`http://localhost:5000/api/notifications/${id}/read`);setNotifications(prev=>prev.map(notif=>notif.id===id?{...notif,isRead:true}:notif));setUnreadCount(prev=>prev>0?prev-1:0);}catch(error){console.error(\"Error al marcar notificaciÃ³n:\",error);}};const markAllNotificationsAsRead=async()=>{try{await axios.put(\"http://localhost:5000/api/notifications/read-all\");setNotifications(prev=>prev.map(notif=>({...notif,isRead:true})));setUnreadCount(0);}catch(error){console.error(\"Error al marcar todas las notificaciones:\",error);}};const updatePost=(postId,updatedData)=>{setPosts(prevPosts=>prevPosts.map(post=>post.id===postId?{...post,...updatedData}:post));};const deletePost=postId=>{setPosts(prevPosts=>prevPosts.filter(post=>post.id!==postId));};const addPost=newPost=>{setPosts(prevPosts=>[newPost,...prevPosts]);};const setAllPosts=newPosts=>{setPosts(newPosts);};const updatePostLikes=(postId,liked,likesCount)=>{setPosts(prevPosts=>prevPosts.map(post=>post.id===postId?{...post,liked,likes:likesCount}:post));};const updatePostComments=(postId,commentCount)=>{setPosts(prevPosts=>prevPosts.map(post=>post.id===postId?{...post,commentCount}:post));};const isAdmin=()=>{return(user===null||user===void 0?void 0:user.role)===\"admin\";};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,loading,login,register,logout,updateUser,refreshUser,notifications,unreadCount,notificationsLoading,fetchNotifications,markNotificationAsRead,markAllNotificationsAsRead,posts,updatePost,deletePost,addPost,setAllPosts,updatePostLikes,updatePostComments,isAdmin},children:children});};export const useAuth=()=>{return useContext(AuthContext);};export default AuthContext;","map":{"version":3,"names":["createContext","useState","useEffect","useCallback","useContext","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","notifications","setNotifications","unreadCount","setUnreadCount","notificationsLoading","setNotificationsLoading","posts","setPosts","fetchNotifications","limit","arguments","length","undefined","localStorage","getItem","res","get","data","error","console","checkLoggedIn","token","defaults","headers","common","id","username","email","role","removeItem","interval","setInterval","clearInterval","login","password","post","setItem","register","logout","updateUser","updatedData","prevUser","refreshUser","markNotificationAsRead","put","prev","map","notif","isRead","markAllNotificationsAsRead","updatePost","postId","prevPosts","deletePost","filter","addPost","newPost","setAllPosts","newPosts","updatePostLikes","liked","likesCount","likes","updatePostComments","commentCount","isAdmin","Provider","value","useAuth"],"sources":["C:/Users/34615/Desktop/TFC_sys/ProyectoFinal_sys/client/src/context/AuthContext.jsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useState, useEffect, useCallback, useContext } from \"react\"\nimport axios from \"axios\"\n\nexport const AuthContext = createContext()\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  const [notifications, setNotifications] = useState([])\n  const [unreadCount, setUnreadCount] = useState(0)\n  const [notificationsLoading, setNotificationsLoading] = useState(false)\n\n  const [posts, setPosts] = useState([])\n\n  const fetchNotifications = useCallback(\n    async (limit = 5) => {\n      if (!user && !localStorage.getItem(\"token\")) return\n\n      try {\n        setNotificationsLoading(true)\n        const res = await axios.get(`http://localhost:5000/api/notifications?limit=${limit}`)\n        setNotifications(res.data.notifications)\n        setUnreadCount(res.data.unreadCount)\n        return res.data\n      } catch (error) {\n        console.error(\"Error al cargar notificaciones:\", error)\n      } finally {\n        setNotificationsLoading(false)\n      }\n    },\n    [user],\n  )\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem(\"token\")\n        if (token) {\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n          const res = await axios.get(\"http://localhost:5000/api/auth/me\")\n          setUser({\n            id: res.data.id,\n            username: res.data.username,\n            email: res.data.email,\n            role: res.data.role,\n          })\n        }\n      } catch (error) {\n        localStorage.removeItem(\"token\")\n        delete axios.defaults.headers.common[\"Authorization\"]\n      }\n      setLoading(false)\n    }\n\n    checkLoggedIn()\n  }, [])\n\n  useEffect(() => {\n    if (user) {\n      fetchNotifications()\n    }\n  }, [user, fetchNotifications])\n\n  useEffect(() => {\n    if (!user) return\n\n    const interval = setInterval(() => {\n      fetchNotifications()\n    }, 30000)\n\n    return () => clearInterval(interval)\n  }, [user, fetchNotifications])\n\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", { email, password })\n      localStorage.setItem(\"token\", res.data.token)\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${res.data.token}`\n      setUser({\n        id: res.data.user.id,\n        username: res.data.user.username,\n        email: res.data.user.email,\n        role: res.data.user.role,\n      })\n      return true\n    } catch (error) {\n      return false\n    }\n  }\n\n  const register = async (username, email, password) => {\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/auth/register\", {\n        username,\n        email,\n        password,\n      })\n      localStorage.setItem(\"token\", res.data.token)\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${res.data.token}`\n      setUser({\n        id: res.data.user.id,\n        username: res.data.user.username,\n        email: res.data.user.email,\n        role: res.data.user.role,\n      })\n      return true\n    } catch (error) {\n      return false\n    }\n  }\n\n  const logout = () => {\n    localStorage.removeItem(\"token\")\n    delete axios.defaults.headers.common[\"Authorization\"]\n    setUser(null)\n    setNotifications([])\n    setUnreadCount(0)\n    setPosts([])\n  }\n\n  const updateUser = (updatedData) => {\n    setUser((prevUser) => ({\n      ...prevUser,\n      ...updatedData,\n    }))\n  }\n\n  const refreshUser = async () => {\n    try {\n      const token = localStorage.getItem(\"token\")\n      if (token) {\n        const res = await axios.get(\"http://localhost:5000/api/auth/me\")\n        setUser({\n          id: res.data.id,\n          username: res.data.username,\n          email: res.data.email,\n          role: res.data.role,\n        })\n        return res.data\n      }\n    } catch (error) {\n      console.error(\"Error refreshing user:\", error)\n    }\n  }\n\n  const markNotificationAsRead = async (id) => {\n    try {\n      await axios.put(`http://localhost:5000/api/notifications/${id}/read`)\n      setNotifications((prev) => prev.map((notif) => (notif.id === id ? { ...notif, isRead: true } : notif)))\n      setUnreadCount((prev) => (prev > 0 ? prev - 1 : 0))\n    } catch (error) {\n      console.error(\"Error al marcar notificaciÃ³n:\", error)\n    }\n  }\n\n  const markAllNotificationsAsRead = async () => {\n    try {\n      await axios.put(\"http://localhost:5000/api/notifications/read-all\")\n      setNotifications((prev) => prev.map((notif) => ({ ...notif, isRead: true })))\n      setUnreadCount(0)\n    } catch (error) {\n      console.error(\"Error al marcar todas las notificaciones:\", error)\n    }\n  }\n\n  const updatePost = (postId, updatedData) => {\n    setPosts((prevPosts) => prevPosts.map((post) => (post.id === postId ? { ...post, ...updatedData } : post)))\n  }\n\n  const deletePost = (postId) => {\n    setPosts((prevPosts) => prevPosts.filter((post) => post.id !== postId))\n  }\n\n  const addPost = (newPost) => {\n    setPosts((prevPosts) => [newPost, ...prevPosts])\n  }\n\n  const setAllPosts = (newPosts) => {\n    setPosts(newPosts)\n  }\n\n  const updatePostLikes = (postId, liked, likesCount) => {\n    setPosts((prevPosts) =>\n      prevPosts.map((post) => (post.id === postId ? { ...post, liked, likes: likesCount } : post)),\n    )\n  }\n\n  const updatePostComments = (postId, commentCount) => {\n    setPosts((prevPosts) => prevPosts.map((post) => (post.id === postId ? { ...post, commentCount } : post)))\n  }\n\n  const isAdmin = () => {\n  return user?.role === \"admin\"\n}\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        loading,\n        login,\n        register,\n        logout,\n        updateUser,\n        refreshUser,\n        notifications,\n        unreadCount,\n        notificationsLoading,\n        fetchNotifications,\n        markNotificationAsRead,\n        markAllNotificationsAsRead,\n        posts,\n        updatePost,\n        deletePost,\n        addPost,\n        setAllPosts,\n        updatePostLikes,\n        updatePostComments,\n        isAdmin,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport const useAuth = () => {\n  return useContext(AuthContext)\n}\n\nexport default AuthContext\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}