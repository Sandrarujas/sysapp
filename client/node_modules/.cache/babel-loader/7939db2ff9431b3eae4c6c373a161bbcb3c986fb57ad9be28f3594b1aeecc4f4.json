{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\34615\\\\Desktop\\\\ProyectoFinal_sys\\\\client\\\\src\\\\components\\\\CommentList.jsx\";\n// client/src/components/CommentList.jsx\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentList = ({\n  comments\n}) => {\n  // Función para manejar las URLs de imágenes\n  const getImageUrl = imagePath => {\n    if (!imagePath) return \"/placeholder.svg?height=30&width=30\";\n\n    // Si la ruta ya es una URL completa, devolverla tal cual\n    if (imagePath.startsWith(\"http\")) return imagePath;\n\n    // Construir la URL completa\n    return `http://localhost:5000${imagePath}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-list\",\n    children: comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${comment.user.username}`,\n          className: \"comment-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: getImageUrl(comment.user.profileImage) || \"/placeholder.svg\",\n            alt: comment.user.username,\n            className: \"comment-user-image\",\n            onError: e => {\n              console.log(\"Error cargando imagen de comentario:\", comment.user.profileImage);\n              e.target.src = \"/placeholder.svg?height=30&width=30\";\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-username\",\n            children: comment.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-date\",\n          children: new Date(comment.createdAt).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-comments\",\n      children: \"No hay comentarios a\\xFAn.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["Link","jsxDEV","_jsxDEV","CommentList","comments","getImageUrl","imagePath","startsWith","className","children","length","map","comment","to","user","username","src","profileImage","alt","onError","e","console","log","target","fileName","_jsxFileName","lineNumber","columnNumber","Date","createdAt","toLocaleDateString","content","id","_c","$RefreshReg$"],"sources":["C:/Users/34615/Desktop/ProyectoFinal_sys/client/src/components/CommentList.jsx"],"sourcesContent":["// client/src/components/CommentList.jsx\nimport { Link } from \"react-router-dom\"\n\nconst CommentList = ({ comments }) => {\n  // Función para manejar las URLs de imágenes\n  const getImageUrl = (imagePath) => {\n    if (!imagePath) return \"/placeholder.svg?height=30&width=30\";\n    \n    // Si la ruta ya es una URL completa, devolverla tal cual\n    if (imagePath.startsWith(\"http\")) return imagePath;\n    \n    // Construir la URL completa\n    return `http://localhost:5000${imagePath}`;\n  }\n\n  return (\n    <div className=\"comments-list\">\n      {comments.length > 0 ? (\n        comments.map((comment) => (\n          <div key={comment.id} className=\"comment\">\n            <div className=\"comment-header\">\n              <Link to={`/profile/${comment.user.username}`} className=\"comment-user\">\n                <img\n                  src={getImageUrl(comment.user.profileImage) || \"/placeholder.svg\"}\n                  alt={comment.user.username}\n                  className=\"comment-user-image\"\n                  onError={(e) => {\n                    console.log(\"Error cargando imagen de comentario:\", comment.user.profileImage);\n                    e.target.src = \"/placeholder.svg?height=30&width=30\";\n                  }}\n                />\n                <span className=\"comment-username\">{comment.user.username}</span>\n              </Link>\n              <span className=\"comment-date\">{new Date(comment.createdAt).toLocaleDateString()}</span>\n            </div>\n            <div className=\"comment-content\">\n              <p>{comment.content}</p>\n            </div>\n          </div>\n        ))\n      ) : (\n        <p className=\"no-comments\">No hay comentarios aún.</p>\n      )}\n    </div>\n  )\n}\n\nexport default CommentList"],"mappings":";AAAA;AACA,SAASA,IAAI,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACpC;EACA,MAAMC,WAAW,GAAIC,SAAS,IAAK;IACjC,IAAI,CAACA,SAAS,EAAE,OAAO,qCAAqC;;IAE5D;IACA,IAAIA,SAAS,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE,OAAOD,SAAS;;IAElD;IACA,OAAO,wBAAwBA,SAAS,EAAE;EAC5C,CAAC;EAED,oBACEJ,OAAA;IAAKM,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3BL,QAAQ,CAACM,MAAM,GAAG,CAAC,GAClBN,QAAQ,CAACO,GAAG,CAAEC,OAAO,iBACnBV,OAAA;MAAsBM,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACvCP,OAAA;QAAKM,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BP,OAAA,CAACF,IAAI;UAACa,EAAE,EAAE,YAAYD,OAAO,CAACE,IAAI,CAACC,QAAQ,EAAG;UAACP,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACrEP,OAAA;YACEc,GAAG,EAAEX,WAAW,CAACO,OAAO,CAACE,IAAI,CAACG,YAAY,CAAC,IAAI,kBAAmB;YAClEC,GAAG,EAAEN,OAAO,CAACE,IAAI,CAACC,QAAS;YAC3BP,SAAS,EAAC,oBAAoB;YAC9BW,OAAO,EAAGC,CAAC,IAAK;cACdC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEV,OAAO,CAACE,IAAI,CAACG,YAAY,CAAC;cAC9EG,CAAC,CAACG,MAAM,CAACP,GAAG,GAAG,qCAAqC;YACtD;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACFzB,OAAA;YAAMM,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEG,OAAO,CAACE,IAAI,CAACC;UAAQ;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,eACPzB,OAAA;UAAMM,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAE,IAAImB,IAAI,CAAChB,OAAO,CAACiB,SAAS,CAAC,CAACC,kBAAkB,CAAC;QAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC,eACNzB,OAAA;QAAKM,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BP,OAAA;UAAAO,QAAA,EAAIG,OAAO,CAACmB;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA,GAlBEf,OAAO,CAACoB,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmBf,CACN,CAAC,gBAEFzB,OAAA;MAAGM,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAuB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACtD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAM,EAAA,GA1CK9B,WAAW;AA4CjB,eAAeA,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}