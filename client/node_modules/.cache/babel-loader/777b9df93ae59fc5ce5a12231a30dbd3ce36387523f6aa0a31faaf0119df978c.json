{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\34615\\\\Desktop\\\\TFC_sys\\\\ProyectoFinal_sys\\\\client\\\\src\\\\pages\\\\AdminPosts.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPosts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pagination, setPagination] = useState({\n    total: 0,\n    pages: 1\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [users, setUsers] = useState({}); // Para almacenar los nombres de usuario\n\n  // Función para obtener el nombre de usuario por ID\n  const fetchUsername = useCallback(async userId => {\n    if (users[userId]) {\n      return users[userId]; // Si ya lo tenemos, no hacer otra petición\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      // CAMBIO: Nueva URL con /id/ antes del userId\n      const response = await fetch(`http://localhost:5000/api/users/id/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        const username = userData.username || userData.name || `Usuario ${userId}`;\n        setUsers(prev => ({\n          ...prev,\n          [userId]: username\n        }));\n        return username;\n      }\n    } catch (error) {\n      console.error(`Error fetching username for ${userId}:`, error);\n    }\n    const fallback = `Usuario ${userId}`;\n    setUsers(prev => ({\n      ...prev,\n      [userId]: fallback\n    }));\n    return fallback;\n  }, [users]);\n  const fetchPosts = useCallback(async (page = 1) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`http://localhost:5000/api/admin/posts?page=${page}&limit=10`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Response status:', response.status);\n      console.log('Response URL:', response.url);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Posts data received:', data);\n        if (Array.isArray(data)) {\n          setPosts(data);\n          setPagination({\n            total: data.length,\n            pages: 1\n          });\n\n          // Obtener nombres de usuario para todos los posts\n          data.forEach(post => {\n            fetchUsername(post.user_id);\n          });\n        } else {\n          setPosts([]);\n          setPagination({\n            total: 0,\n            pages: 1\n          });\n        }\n      } else {\n        const errorText = await response.text();\n        console.error(\"Error en la respuesta:\", response.status, errorText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchUsername]);\n  useEffect(() => {\n    fetchPosts(currentPage);\n  }, [currentPage, fetchPosts]);\n  const deletePost = async postId => {\n    if (!window.confirm(`¿Estás seguro de que quieres eliminar esta publicación?`)) {\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`http://localhost:5000/api/admin/posts/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        fetchPosts(currentPage);\n        alert(\"Publicación eliminada correctamente\");\n      } else {\n        alert(\"Error al eliminar la publicación\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n      alert(\"Error al eliminar la publicación\");\n    }\n  };\n  const truncateContent = (content, maxLength = 100) => {\n    if (content.length <= maxLength) return content;\n    return content.substring(0, maxLength) + \"...\";\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-loading\",\n      children: \"Cargando publicaciones...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gesti\\xF3n de Publicaciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: \", (pagination === null || pagination === void 0 ? void 0 : pagination.total) || 0, \" publicaciones\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchPosts(currentPage),\n        className: \"admin-btn\",\n        children: \"Recargar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: posts && posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-id\",\n              children: [\"ID: \", post.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-author\",\n              children: [\"Por: \", users[post.user_id] || `Usuario ${post.user_id}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-date\",\n              children: new Date(post.created_at).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-stats\",\n            children: post.image && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"has-image\",\n              children: \"\\uD83D\\uDCF7 Con imagen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: truncateContent(post.content)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), post.image && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000${post.image}`,\n              alt: \"Post\",\n              style: {\n                maxWidth: '200px',\n                maxHeight: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn delete\",\n            onClick: () => deletePost(post.id),\n            children: \"Eliminar Publicaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hay publicaciones para mostrar.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentPage === 1,\n        onClick: () => setCurrentPage(currentPage - 1),\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"P\\xE1gina \", currentPage, \" de \", (pagination === null || pagination === void 0 ? void 0 : pagination.pages) || 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentPage === ((pagination === null || pagination === void 0 ? void 0 : pagination.pages) || 1),\n        onClick: () => setCurrentPage(currentPage + 1),\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPosts, \"YuKFDC4AC3EH/1XPNeQznmu2rAA=\");\n_c = AdminPosts;\nexport default AdminPosts;\nvar _c;\n$RefreshReg$(_c, \"AdminPosts\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useCallback","jsxDEV","_jsxDEV","AdminPosts","posts","setPosts","loading","setLoading","pagination","setPagination","total","pages","currentPage","setCurrentPage","users","setUsers","fetchUsername","userId","token","localStorage","getItem","response","fetch","headers","Authorization","ok","userData","json","username","name","prev","error","console","fallback","fetchPosts","page","log","status","url","data","Array","isArray","length","forEach","post","user_id","errorText","text","deletePost","postId","window","confirm","method","alert","truncateContent","content","maxLength","substring","className","children","fileName","lineNumber","columnNumber","onClick","map","id","Date","created_at","toLocaleDateString","image","src","alt","style","maxWidth","maxHeight","disabled","_c","$RefreshReg$"],"sources":["C:/Users/34615/Desktop/TFC_sys/ProyectoFinal_sys/client/src/pages/AdminPosts.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect, useCallback } from \"react\"\r\nimport \"../App.css\"\r\n\r\nconst AdminPosts = () => {\r\n  const [posts, setPosts] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [pagination, setPagination] = useState({ total: 0, pages: 1 })\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [users, setUsers] = useState({}) // Para almacenar los nombres de usuario\r\n\r\n  // Función para obtener el nombre de usuario por ID\r\n  const fetchUsername = useCallback(async (userId) => {\r\n    if (users[userId]) {\r\n      return users[userId] // Si ya lo tenemos, no hacer otra petición\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      // CAMBIO: Nueva URL con /id/ antes del userId\r\n      const response = await fetch(`http://localhost:5000/api/users/id/${userId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json()\r\n        const username = userData.username || userData.name || `Usuario ${userId}`\r\n        setUsers(prev => ({ ...prev, [userId]: username }))\r\n        return username\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching username for ${userId}:`, error)\r\n    }\r\n    \r\n    const fallback = `Usuario ${userId}`\r\n    setUsers(prev => ({ ...prev, [userId]: fallback }))\r\n    return fallback\r\n  }, [users])\r\n\r\n  const fetchPosts = useCallback(async (page = 1) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      const response = await fetch(`http://localhost:5000/api/admin/posts?page=${page}&limit=10`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      console.log('Response status:', response.status)\r\n      console.log('Response URL:', response.url)\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        console.log('Posts data received:', data)\r\n        \r\n        if (Array.isArray(data)) {\r\n          setPosts(data)\r\n          setPagination({ total: data.length, pages: 1 })\r\n          \r\n          // Obtener nombres de usuario para todos los posts\r\n          data.forEach(post => {\r\n            fetchUsername(post.user_id)\r\n          })\r\n        } else {\r\n          setPosts([])\r\n          setPagination({ total: 0, pages: 1 })\r\n        }\r\n      } else {\r\n        const errorText = await response.text()\r\n        console.error(\"Error en la respuesta:\", response.status, errorText)\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching posts:\", error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [fetchUsername])\r\n\r\n  useEffect(() => {\r\n    fetchPosts(currentPage)\r\n  }, [currentPage, fetchPosts])\r\n\r\n  const deletePost = async (postId) => {\r\n    if (!window.confirm(`¿Estás seguro de que quieres eliminar esta publicación?`)) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      const response = await fetch(`http://localhost:5000/api/admin/posts/${postId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      if (response.ok) {\r\n        fetchPosts(currentPage)\r\n        alert(\"Publicación eliminada correctamente\")\r\n      } else {\r\n        alert(\"Error al eliminar la publicación\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting post:\", error)\r\n      alert(\"Error al eliminar la publicación\")\r\n    }\r\n  }\r\n\r\n  const truncateContent = (content, maxLength = 100) => {\r\n    if (content.length <= maxLength) return content\r\n    return content.substring(0, maxLength) + \"...\"\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"admin-loading\">Cargando publicaciones...</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-posts\">\r\n      <div className=\"admin-header\">\r\n        <h1>Gestión de Publicaciones</h1>\r\n        <p>Total: {pagination?.total || 0} publicaciones</p>\r\n        <button onClick={() => fetchPosts(currentPage)} className=\"admin-btn\">\r\n          Recargar\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"posts-list\">\r\n        {posts && posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <div key={post.id} className=\"post-card\">\r\n              <div className=\"post-header\">\r\n                <div className=\"post-info\">\r\n                  <span className=\"post-id\">ID: {post.id}</span>\r\n                  <span className=\"post-author\">Por: {users[post.user_id] || `Usuario ${post.user_id}`}</span>\r\n                  <span className=\"post-date\">{new Date(post.created_at).toLocaleDateString()}</span>\r\n                </div>\r\n                <div className=\"post-stats\">\r\n                  {post.image && <span className=\"has-image\">📷 Con imagen</span>}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"post-content\">\r\n                <p>{truncateContent(post.content)}</p>\r\n                {post.image && (\r\n                  <div className=\"post-image\">\r\n                    <img src={`http://localhost:5000${post.image}`} alt=\"Post\" style={{maxWidth: '200px', maxHeight: '200px'}} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"post-actions\">\r\n                <button className=\"action-btn delete\" onClick={() => deletePost(post.id)}>\r\n                  Eliminar Publicación\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"no-data\">\r\n            <p>No hay publicaciones para mostrar.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"pagination\">\r\n        <button disabled={currentPage === 1} onClick={() => setCurrentPage(currentPage - 1)}>\r\n          Anterior\r\n        </button>\r\n        <span>\r\n          Página {currentPage} de {pagination?.pages || 1}\r\n        </span>\r\n        <button disabled={currentPage === (pagination?.pages || 1)} onClick={() => setCurrentPage(currentPage + 1)}>\r\n          Siguiente\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminPosts"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}